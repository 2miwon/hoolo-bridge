basePath: /docs
definitions:
  db.User:
    properties:
      created_at:
        type: string
      deleted_at:
        type: string
      id:
        type: string
      password:
        type: string
      profile_image_url:
        type: string
      username:
        type: string
    type: object
host: '3.36.212.250:3000 // TODO: change to your server''s IP'
info:
  contact:
    email: zhengsfsf@gmail.com
    name: API Support
  description: This is a Hoolo swagger docs for Fiber
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Hoolo API
  version: "0.1"
paths:
  /login:
    post:
      consumes:
      - application/json
      description: Register a new user with email, username and password
      parameters:
      - description: Email
        in: body
        name: email
        required: true
        schema:
          type: string
      - description: Password
        in: body
        name: password
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/db.User'
        "400":
          description: User already exists
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      tags:
      - users
  /myinfo:
    post:
      consumes:
      - application/json
      description: Get user info by user ID
      parameters:
      - description: User ID
        in: body
        name: id
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/db.User'
        "400":
          description: User not found
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      tags:
      - users
  /register:
    post:
      consumes:
      - application/json
      description: Register a new user with email, username and password
      parameters:
      - description: Email
        in: body
        name: email
        required: true
        schema:
          type: string
      - description: Username
        in: body
        name: username
        required: true
        schema:
          type: string
      - description: Password
        in: body
        name: password
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/db.User'
        "400":
          description: User already exists
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      tags:
      - users
swagger: "2.0"
